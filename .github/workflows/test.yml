name: Test Code

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13t", "3.13"]
        poetry-version: ["latest", "2.1.3"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@3765cf608f2d4a72178a9fc5b918668e542b89b1 #v4
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - uses: actions/cache@v4
        name: Setup cache
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install Dependencies
        run: poetry install
      - name: Tests
        run: poetry run pytest --cov --cov-report=term-missing --junit-xml=test-results.xml --cov-report xml:cov.xml
      - uses: pre-commit/action@v3.0.1
        if: always() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' && matrix.poetry-version == 'latest'
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "test-results.xml"
        if: always() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' && matrix.poetry-version == 'latest'
      - uses: 5monkeys/cobertura-action@ee5787cc56634acddedc51f21c7947985531e6eb # v14
        with:
          path: cov.xml
          minimum_coverage: 75
          fail_below_threshold: true
          show_missing: true
          link_missing_lines: true
        if: always() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' && matrix.poetry-version == 'latest'
